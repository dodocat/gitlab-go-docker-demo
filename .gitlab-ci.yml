image: golang:1.9.0

stages:
  - test
  - build
  - deploy

before_script:
  - mkdir -p $GOPATH/src/$(echo $CI_PROJECT_URL | sed 's/^http\(\|s\):\/\///g') && cd $_ && cd .. && rm -rf $CI_PROJECT_NAME
  - ln -sf $CI_PROJECT_DIR
  - cd $CI_PROJECT_NAME
  - pwd

test:
  stage: test
  script:
    - go test

build:
  stage: build
  script:
    - go build -o main
  artifacts:
      expire_in: 1 week
      paths:
        - main

deploy_docker:
  image: docker:git
  services:
    - docker:dind
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME -f docker/test/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_dsa
    - chmod 600 ~/.ssh/id_dsa
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh -t "$DEVELOP_SERVER_USER"@"$DEVELOP_SERVER" "touch ~/run/$CI_PROJECT_NAME.restart"

  only:
    - test
    - docker

deploy_version_docker:
  image: docker:git
  stage: deploy
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME -f docker/prod/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/:$CI_COMMIT_TAG
  only:
    - tags